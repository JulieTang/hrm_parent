<template>
    <section>
        <!--工具条-->
        <el-col :span="24" class="toolbar" style="padding-bottom: 0px;">
            <el-form :model="filters" :inline="true">
                <el-form-item>
                    <el-input v-model="filters.keyword" placeholder="关键字"></el-input>
                </el-form-item>
                <el-form-item>
                    <el-button type="primary" v-on:click="get${entity}s">查询</el-button>
                </el-form-item>
                <el-form-item>
                    <el-button type="primary" @click="add">新增</el-button>
                </el-form-item>
            </el-form>
        </el-col>


        <!--列表v-loading="listLoading"-->
        <el-table :data="${table.entityPath}s" v-loading="listLoading" highlight-current-row style="width: 100%;">
            <!--多选框-->
            <el-table-column type="selection" width="55">
            </el-table-column>
            <!--索引值,为什么不用id,id不序号-->
            <el-table-column type="index" width="60">
            </el-table-column>
            <!--*******************************通过模板生成的界面********************-->
            #foreach($field in ${table.commonFields})##生成公共字段
            #*${field.name}表示数据库表的字段*#
            #*${field.propertyName}表示domain中的字段，可能没有_之类的中间符号*#
            #*${field.comment} 表示数据库表中的注解*#
            <el-table-column prop="${field.propertyName}" label="${field.comment}">
            </el-table-column>
            #end
            #foreach($field in ${table.fields})
            #if(!${field.keyFlag})##生成普通字段
            <el-table-column prop="${field.propertyName}" label="${field.comment}">
            </el-table-column>
            #end
            #end
            <el-table-column label="操作" width="150">
                <template scope="scope">
                    <el-button size="small" @click="edit(scope.row)">编辑</el-button>
                    <el-button type="danger" size="small" @click="del(scope.row)">删除</el-button>
                </template>
            </el-table-column>
        </el-table>


        <!--工具条-->
        <el-col :span="24" class="toolbar">
            <el-button type="danger">批量删除</el-button>
            <el-pagination layout="prev, pager, next" @current-change="handleCurrentChange" :page-size="10"
                           :total="total" style="float:right;">
            </el-pagination>
        </el-col>

        <!--添加或编辑对话框-->
        <el-dialog title="添加或修改" :visible.sync="${table.entityPath}formVisible" :close-on-click-modal="false">
            <el-form :model="${table.entityPath}" label-width="80px" :rules="${table.entityPath}formRules"
                     ref="${table.entityPath}">
                <!--*******************************通过模板生成的界面********************-->
                #foreach($field in ${table.commonFields})##生成公共字段
                <el-form-item label="${field.comment}" prop="${field.propertyName}">
                    <el-input v-model="${table.entityPath}.${field.propertyName}" auto-complete="off"></el-input>
                </el-form-item>
                #end
                #foreach($field in ${table.fields})
                #if(!${field.keyFlag})##生成普通字段
                <el-form-item label="${field.comment}" prop="${field.propertyName}">
                    <el-input v-model="${table.entityPath}.${field.propertyName}" auto-complete="off"></el-input>
                </el-form-item>
                #end
                #end
                <!--<el-form-item label="部门经理" prop="manager">
                 <el-select v-model="${table.entityPath}.manager" placeholder="请选择">
                  <el-option
                          v-for="item in employees"
                          :key="item.id"
                          :label="item.username"
                          :value="item.id">
                   <span style="float: left">{{ item.id }}</span>
                   <span style="float: right; color: #8492a6; font-size: 13px">{{ item.username }}</span>
                  </el-option>
                 </el-select>
                </el-form-item>-->
            </el-form>
            <div slot="footer" class="dialog-footer">
                <el-button @click.native="${table.entityPath}formVisible = false">取消</el-button>
                <el-button type="primary" @click="save">提交</el-button>
            </div>
        </el-dialog>
    </section>
</template>


<script>
    export default {
        data() {
            return {
                    ${table.entityPath}formVisible: false,//对话框默认不显示,只有点击添加或修改的时候显示
                listLoading: false,
                //查询对象
                filters: {
                    keyword: ''
                },
                page: 1,//当前页,要传递到后台的
                total: 0, //分页总数
                ${table.entityPath}s: [], //当前页数据
                //初始值
                ${table.entityPath}:{
                    #foreach($field in ${table.fields})
                    ${field.propertyName}:'',
                    #end
                },
                ${table.entityPath}formRules: {
                    /*name: [
                       { required: true, message: '请输入名称!', trigger: 'blur' }
                      ]*/
                }
            }
        },
        methods: {
            /**
             * 模板，格式化某些字段，如boolean类型在vue界面展示为是/否
             */
            stateFormatter(row, column, cellValue, index){
                if(cellValue===0){
                    return "正常";
                }else{
                    return "停用";
                }
             },
            /**
             * 留用的模板，获取某些对象的信息
             */
            getEmployees() {
                //发送请求到后台获取数据
                this.$http.patch("/employee") //$.Post(.....)
                        .then(result => {
                            this.employees = result.data;
                        });
            },
            /**
             * 修改当前页面
             */
            handleCurrentChange(curentPage) {
                this.page = curentPage;
                this.get${entity}s();
            },
            /**
             * 添加
             */
            add() {
                //清空数据
                this.${table.entityPath}= {
                #foreach($field in ${table.fields})
                ${field.propertyName}:'',
                #end
            }
                //打开dialog
                this.${table.entityPath}formVisible = true;
            },
            /**
             * 编辑
             */
            edit(row) {
                //this.getEmployees();
                //回显
                let ${table.entityPath}Tmp = Object.assign({}, row); //解决对话框改值后列表会被改值.
                this.${table.entityPath} = ${table.entityPath}Tmp; //里面本来就有id,相当于回显了id
                //显示
                this.${table.entityPath}formVisible = true;
            },
            /**
             * 删除
             */
            del(row) {
                console.log(row);
                this.$confirm('确认删除该记录吗?', '提示', {
                    type: 'warning'
                }).then(() => {
                    var id = row.id;
                    this.listLoading = true;
                    this.$http.delete("/${table.entityPath}/" + id)
                            .then(result => {
                                this.listLoading = false;
                                //做提示
                                if (result.data.success) {
                                    this.$message({
                                        message: '删除成功',
                                        type: 'success'
                                    });
                                } else {
                                    this.$message({
                                        message: result.data.message,
                                        type: 'error'
                                    });
                                }
                                //刷新数据
                                this.get${entity}s();
                            })
                });

            },
            /**
             * 保存（由于模板原因，里面的内容需要从其他界面copy）
             */
            save(){

            },
            /**
             * 获取展示界面值
             */
            get${entity}s() {
                //发送Ajax请求后台获取数据  axios
                //添加分页条件及高级查询条件
                let para = {
                    "page": this.page,
                    "keyword": this.filters.keyword
                };
                this.listLoading = true; //显示加载圈
                //分页查询
                this.$http.post("/${table.entityPath}/${table.entityPath}/json",para) //$.Post(.....)
                        .then(result => {
                            this.total = result.data.total;
                            this.${table.entityPath}s = result.data.rows;
                            this.listLoading = false;  //关闭加载圈
                        });
            },
        },
        mounted() {
            this.get${entity}s()
        }
    }


</script>

<style scoped>

</style>